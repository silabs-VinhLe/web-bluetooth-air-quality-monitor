!function(){"use strict";let t="8c8299d7-d4c2-4ac4-b2cc-349df7a20af5",a="1b621ff2-b789-4b7c-985f-b62a50802bbf",i="ec099dd9-7887-4ca6-a169-92a5e9ed7926",e="ca19fb61-b04b-409a-8a18-c37560bdf05a",c="3a79c933-c922-45c7-b5e7-9bdefd126dd9",s="c5fd8492-9c55-4c18-b761-99b8cf9bca77",r="98205b49-a9e1-4bfc-a18d-60d36798397f";window.airQualityMonitoring=new class{constructor(){this.device=null,this.server=null,this._characteristics=new Map}async connect(){let n=await navigator.bluetooth.requestDevice({filters:[{name:["Air Quality"]},{services:[t,c]}]});console.log("> Found "+n.name),console.log("Connecting to GATT Server..."),this.device=n;let o=await n.gatt.connect();this.server=o;let u=await o.getPrimaryService(t);console.log("> Found service: "+u.uuid),await this._cacheCharacteristics(u,[a,i,e]),console.log("> Found service: "+(u=await o.getPrimaryService(c)).uuid),await this._cacheCharacteristics(u,[s,r])}async writeBuzzerVolume(t){return await this._writeCharacteristicValue(s,t)}async readBuzzerVolume(){let t=await this._readCharacteristicValue(s);return(t=t.buffer?t:new DataView(t)).getUint8(0)}async writeMeasurementPeriod(t){return await this._writeCharacteristicValue(r,t)}async readMeasurementPeriod(){let t=await this._readCharacteristicValue(r);return(t=t.buffer?t:new DataView(t)).getUint8(0)}async startNotificationsCO2Level(){return await this._startNotifications(a)}async startNotificationsTVOC(){return await this._startNotifications(i)}async startNotificationsAQI(){return await this._startNotifications(e)}async stopNotificationsCO2Level(){return await this._stopNotifications(a)}async stopNotificationsTVOC(){return await this._stopNotifications(i)}async stopNotificationsAQI(){return await this._stopNotifications(e)}async _cacheCharacteristics(t,a){for(let i in a){let e=await t.getCharacteristic(a[i]);console.log("> Found characteristic: "+e.uuid),this._characteristics.set(e.uuid,e)}}async _readCharacteristicValue(t){let a=this._characteristics.get(t),i=await a.readValue();return i.buffer?i:new DataView(i)}async _writeCharacteristicValue(t,a){let i=this._characteristics.get(t);return await i.writeValue(a)}async _startNotifications(t){let a=this._characteristics.get(t);return await a.startNotifications()}async _stopNotifications(t){let a=this._characteristics.get(t);return await a.stopNotifications()}}}();